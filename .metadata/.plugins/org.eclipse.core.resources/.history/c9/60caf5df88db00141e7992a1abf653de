package view;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Set;
import java.util.TreeSet;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

import comparator.UserRating;

import model.server.User;
import model.server.UserManagement;

@SuppressWarnings("serial")
public class StartScreen extends JPanel{
	
	// User interface objects
	private JTable userRatings;
	private JButton playGameOnline = new JButton("Speel spel online");
	private JButton playGameOffline = new JButton("Speel spel offline");
	private JButton logOut = new JButton("Uitloggen en afsluiten");
	
	public StartScreen(){
		/* User interface */
		this.setLayout(null);
		
		//XXX ~Remove at iteration 2
		//playGameOnline.setEnabled(false);
		
		// West side
		Set<User> users = new TreeSet<>(new UserRating());
		users.addAll(UserManagement.getUsers());
		String[] columnNames = { "Username", "Rating" };
		Object[][] data = new Object[users.size()][2];
			int i = 0;
			for(User user : users){
				data[i][0] = user.username;
				data[i++][1] = user.rating();
			}
		userRatings = new JTable(data, columnNames);
		userRatings.setSize(Program.windowSize.width * 1 / 2, Program.windowSize.height);
		userRatings.setLocation(0, 0);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setSize(Program.windowSize.width * 1 / 2, Program.windowSize.height);
		scrollPane.setLocation(0, 0);
		scrollPane.setViewportView(userRatings);
		this.add(scrollPane);
		
		// East side
		playGameOnline.setSize(200, 50);
		playGameOnline.setLocation((Program.windowSize.width * 3 / 4) - (playGameOnline.getWidth() * 1 / 2) , Program.windowSize.height * 2 / 10);
		playGameOnline.addMouseListener(new MouseAdapter(){
			public void mouseReleased(MouseEvent event){
				if(Program.loggedInUser == null){
					Program.switchToPanel(LoginScreen.class);
				}else{
					Program.switchToPanel(PreGameScreen.class);
				}
			}
		});
		this.add(playGameOnline);
		
		playGameOffline.setSize(200, 50);
		playGameOffline.setLocation((Program.windowSize.width * 3 / 4) - (playGameOnline.getWidth() * 1 / 2) , Program.windowSize.height * 4 / 10);
		playGameOffline.addMouseListener(new MouseAdapter(){
			public void mouseReleased(MouseEvent event){
				Program.switchToPanel(GameScreen.class);
			}
		});
		this.add(playGameOffline);
		
		logOut.setSize(200, 50);
		logOut.setLocation((Program.windowSize.width * 3 / 4) - (playGameOnline.getWidth() * 1 / 2) , Program.windowSize.height * 7 / 10);
		logOut.addMouseListener(new MouseAdapter(){
			public void mouseReleased(MouseEvent event){
				Program.close();
			}
		});
		this.add(logOut);
	}
	
}
